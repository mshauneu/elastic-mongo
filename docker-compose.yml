mongo2:
  image: mongo:3.2.6
  hostname: mongo2
  restart: always
  entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--journal", "--smallfiles", "--rest", "--httpinterface" ]
  ports:
    - "27217:27017"
    - "28217:28017"
# volumes:
#    - ./mdb2/data:/data

mongo1:
  image: mongo:3.2.6
  hostname: mongo1
  restart: always
  entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--journal", "--smallfiles", "--rest", "--httpinterface" ]
  ports:
    - "27117:27017"
    - "28117:28017"
  links:
    - mongo2:mongo2
#  volumes:
#    - ./mdb1/data:/data

es1:
  image: elasticsearch:2.3.3
  hostname: es1
  restart: always
  command: elasticsearch -Des.node.name="n1"
#  volumes:
#    - ./es1/data:/usr/share/elasticsearch/data
  ports:
    - "9201:9200"
    - "9301:9300"
es2:
  image: elasticsearch:2.3.3
  hostname: es2
  restart: always
  command: elasticsearch -Des.node.name="n2"
#  volumes:
#    - ./es2/data:/usr/share/elasticsearch/data
  ports:
    - "9202:9200"
    - "9302:9300"

# This configures the MongoDB 
setupmongodb:
  image: mongo:3.2.6
  links:
    - mongo1:mongo1
    - mongo2:mongo2
  volumes:
    - ./scripts:/scripts
  entrypoint: [ "/scripts/setup-mongodb.sh" ]

# This configures the ES
setupes:
  image: elasticsearch:2.3.3
  links:
    - es1:es1
    - es2:es2
  volumes:
    - ./scripts:/scripts
  entrypoint: [ "/scripts/setup-es.sh" ]

# Transporter
transporter:
  image: starefossen/transporter:0.1
  hostname: transporter
  restart: always
  links:
    - mongo1:mongo1
    - mongo2:mongo2
    - es1:es1
    - es2:es2
  volumes:
    - ./transporter:/transporter
    - ./scripts:/scripts
  entrypoint: [ "/transporter/run.sh" ] 

# Verify reading and writing
# Run 'docker logs -f elasticmongo_verify_1' to see what it outputs.
verify:
  image: mongo:3.2.6
  links:
    - mongo1:mongo1
    - mongo2:mongo2
    - es1:es1
    - es2:es2
  volumes:
    - ./scripts:/scripts
  entrypoint: [ "/scripts/test.sh" ]
